import curses
import sys

def JetsonIO(stdscr):
    # Clear screen
    stdscr.clear()

    # Define menu options
    menu = [
        "Configure Jetson for compatible hardware",
        "Configure Jetson 40-pin expansion header",
        "Configure Jetson Nano CSI connector",
        "Configure Jetson M.2 Key E Slot",
        "Exit"
    ]

    current_row = 0
    while True:
        # Display menu
        for idx, row in enumerate(menu):
            if idx == current_row:
                stdscr.addstr(idx, 0, row, curses.A_REVERSE)
            else:
                stdscr.addstr(idx, 0, row)
        stdscr.refresh()

        # Wait for user input
        key = stdscr.getch()

        if key == curses.KEY_UP and current_row > 0:
            current_row -= 1
        elif key == curses.KEY_DOWN and current_row < len(menu) - 1:
            current_row += 1
        elif key == 10:  # Enter key
            if current_row == 1:  # "Configure Jetson 40-pin expansion header"
                configure_expansion_header(stdscr)
            elif current_row == 4:  # "Exit"
                break

def configure_expansion_header(stdscr):
    # Define header options
    headers = [
        "SPI1",
        "SPI2",
        "Exit"
    ]

    current_row = 0
    while True:
        # Display header options
        for idx, row in enumerate(headers):
            if idx == current_row:
                stdscr.addstr(idx, 0, row, curses.A_REVERSE)
            else:
                stdscr.addstr(idx, 0, row)
        stdscr.refresh()

        # Wait for user input
        key = stdscr.getch()

        if key == curses.KEY_UP and current_row > 0:
            current_row -= 1
        elif key == curses.KEY_DOWN and current_row < len(headers) - 1:
            current_row += 1
        elif key == 10:  # Enter key
            if current_row == 0:  # "SPI1"
                enable_spi1()
            elif current_row == 1:  # "SPI2"
                enable_spi2()
            elif current_row == 2:  # "Exit"
                break

def enable_spi1():
    # Simulate enabling SPI1
    print("Enabling SPI1...")
    # Add actual SPI1 enabling code here

def enable_spi2():
    # Simulate enabling SPI2
    print("Enabling SPI2...")
    # Add actual SPI2 enabling code here

if __name__ == "__main__":
    curses.wrapper(JetsonIO)

